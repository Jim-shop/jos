[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_memman_alloc_4k
	EXTERN	_memman_free_4k
[FILE "sheet.c"]
[SECTION .text]
	GLOBAL	_shtctl_init
_shtctl_init:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
	PUSH	10260
	MOV	EDI,DWORD [16+EBP]
	PUSH	ESI
	CALL	_memman_alloc_4k
	MOV	EBX,EAX
	POP	EAX
	POP	EDX
	XOR	EAX,EAX
	TEST	EBX,EBX
	JE	L1
	MOV	EAX,DWORD [20+EBP]
	IMUL	EAX,EDI
	PUSH	EAX
	PUSH	ESI
	CALL	_memman_alloc_4k
	TEST	EAX,EAX
	MOV	DWORD [4+EBX],EAX
	POP	EDX
	POP	ECX
	JE	L12
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [8+EBX],EDI
	MOV	DWORD [EBX],EAX
	LEA	EDX,DWORD [9180+EBX]
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [12+EBX],EAX
	MOV	EAX,EBX
	MOV	DWORD [16+EBX],-1
L8:
	MOV	DWORD [1076+EAX],0
	MOV	DWORD [1044+EAX],EBX
	ADD	EAX,36
	CMP	EAX,EDX
	JLE	L8
L11:
	MOV	EAX,EBX
L1:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L12:
	PUSH	10260
	PUSH	EBX
	PUSH	ESI
	CALL	_memman_free_4k
	JMP	L11
	GLOBAL	_sheet_alloc
_sheet_alloc:
	PUSH	EBP
	XOR	EDX,EDX
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	ADD	EAX,1044
L19:
	CMP	DWORD [32+EAX],0
	JE	L22
	INC	EDX
	ADD	EAX,36
	CMP	EDX,255
	JLE	L19
	XOR	EAX,EAX
L13:
	POP	EBP
	RET
L22:
	MOV	DWORD [32+EAX],1
	MOV	DWORD [28+EAX],-1
	JMP	L13
	GLOBAL	_sheet_setbuf
_sheet_setbuf:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [4+EDX],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [8+EDX],EAX
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [12+EDX],EAX
	MOV	EAX,DWORD [24+EBP]
	MOV	DWORD [24+EDX],EAX
	POP	EBP
	RET
	GLOBAL	_sheet_updown
_sheet_updown:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	MOV	ESI,DWORD [8+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	EDI,DWORD [ESI]
	MOV	EAX,DWORD [28+ESI]
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [16+EDI]
	INC	EAX
	CMP	EBX,EAX
	JLE	L25
	MOV	EBX,EAX
L25:
	CMP	EBX,-1
	JGE	L26
	OR	EBX,-1
L26:
	MOV	DWORD [28+ESI],EBX
	CMP	DWORD [-16+EBP],EBX
	JLE	L27
	TEST	EBX,EBX
	JS	L28
	MOV	ECX,DWORD [-16+EBP]
L33:
	MOV	EAX,DWORD [16+EDI+ECX*4]
	MOV	DWORD [20+EDI+ECX*4],EAX
	MOV	DWORD [28+EAX],ECX
	DEC	ECX
	CMP	ECX,EBX
	JG	L33
	MOV	DWORD [20+EDI+EBX*4],ESI
	INC	EBX
	PUSH	EBX
	MOV	EAX,DWORD [12+ESI]
	ADD	EAX,DWORD [20+ESI]
	PUSH	EAX
	MOV	EAX,DWORD [8+ESI]
	ADD	EAX,DWORD [16+ESI]
	PUSH	EAX
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [16+ESI]
	PUSH	EDI
	CALL	_sheet_refreshmap
	PUSH	DWORD [-16+EBP]
L63:
	PUSH	EBX
L62:
	MOV	EAX,DWORD [12+ESI]
	ADD	EAX,DWORD [20+ESI]
	PUSH	EAX
	MOV	EAX,DWORD [8+ESI]
	ADD	EAX,DWORD [16+ESI]
	PUSH	EAX
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [16+ESI]
	PUSH	EDI
	CALL	_sheet_refreshsub
	ADD	ESP,52
L24:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L28:
	MOV	EAX,DWORD [16+EDI]
	CMP	EAX,DWORD [-16+EBP]
	JLE	L35
	MOV	ECX,DWORD [-16+EBP]
	CMP	ECX,EAX
	JGE	L35
L40:
	MOV	EAX,DWORD [24+EDI+ECX*4]
	MOV	DWORD [20+EDI+ECX*4],EAX
	MOV	DWORD [28+EAX],ECX
	INC	ECX
	CMP	ECX,DWORD [16+EDI]
	JL	L40
L35:
	DEC	DWORD [16+EDI]
	PUSH	0
	MOV	EAX,DWORD [12+ESI]
	ADD	EAX,DWORD [20+ESI]
	PUSH	EAX
	MOV	EAX,DWORD [8+ESI]
	ADD	EAX,DWORD [16+ESI]
	PUSH	EAX
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [16+ESI]
	PUSH	EDI
	CALL	_sheet_refreshmap
	MOV	EAX,DWORD [-16+EBP]
	DEC	EAX
	PUSH	EAX
	PUSH	0
	JMP	L62
L27:
	CMP	DWORD [-16+EBP],EBX
	JGE	L24
	CMP	DWORD [-16+EBP],0
	JS	L43
	MOV	ECX,DWORD [-16+EBP]
	CMP	ECX,EBX
	JGE	L59
L48:
	MOV	EAX,DWORD [24+EDI+ECX*4]
	MOV	DWORD [20+EDI+ECX*4],EAX
	MOV	DWORD [28+EAX],ECX
	INC	ECX
	CMP	ECX,EBX
	JL	L48
L59:
	MOV	DWORD [20+EDI+EBX*4],ESI
L49:
	PUSH	EBX
	MOV	EAX,DWORD [12+ESI]
	ADD	EAX,DWORD [20+ESI]
	PUSH	EAX
	MOV	EAX,DWORD [8+ESI]
	ADD	EAX,DWORD [16+ESI]
	PUSH	EAX
	PUSH	DWORD [20+ESI]
	PUSH	DWORD [16+ESI]
	PUSH	EDI
	CALL	_sheet_refreshmap
	PUSH	EBX
	JMP	L63
L43:
	MOV	ECX,DWORD [16+EDI]
	CMP	ECX,EBX
	JL	L61
L54:
	MOV	EDX,DWORD [20+EDI+ECX*4]
	LEA	EAX,DWORD [1+ECX]
	MOV	DWORD [24+EDI+ECX*4],EDX
	DEC	ECX
	MOV	DWORD [28+EDX],EAX
	CMP	ECX,EBX
	JGE	L54
L61:
	MOV	DWORD [20+EDI+EBX*4],ESI
	INC	DWORD [16+EDI]
	JMP	L49
	GLOBAL	_sheet_refresh
_sheet_refresh:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [28+EDX]
	TEST	EAX,EAX
	JS	L64
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	PUSH	DWORD [28+EDX]
	ADD	EAX,DWORD [20+EDX]
	PUSH	EAX
	MOV	EAX,DWORD [20+EBP]
	ADD	EAX,DWORD [16+EDX]
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,DWORD [20+EDX]
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	ADD	EAX,DWORD [16+EDX]
	PUSH	EAX
	PUSH	DWORD [EDX]
	CALL	_sheet_refreshsub
	ADD	ESP,28
L64:
	LEAVE
	RET
	GLOBAL	_sheet_refreshsub
_sheet_refreshsub:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,44
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [8+EBP]
	CMP	DWORD [12+EBP],0
	MOV	EAX,DWORD [EAX]
	MOV	EDX,DWORD [4+EDX]
	MOV	DWORD [-32+EBP],EAX
	MOV	DWORD [-36+EBP],EDX
	JS	L97
L67:
	CMP	DWORD [16+EBP],0
	JS	L98
L68:
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,DWORD [8+ESI]
	CMP	DWORD [20+EBP],EAX
	JLE	L69
	MOV	DWORD [20+EBP],EAX
L69:
	MOV	EDI,DWORD [8+EBP]
	MOV	EAX,DWORD [12+EDI]
	CMP	DWORD [24+EBP],EAX
	JLE	L70
	MOV	DWORD [24+EBP],EAX
L70:
	MOV	EAX,DWORD [28+EBP]
	MOV	EDX,DWORD [32+EBP]
	MOV	DWORD [-16+EBP],EAX
	CMP	EAX,EDX
	JG	L92
L90:
	MOV	EDI,DWORD [8+EBP]
	MOV	ESI,DWORD [-16+EBP]
	MOV	ECX,DWORD [16+EBP]
	MOV	EBX,DWORD [20+EDI+ESI*4]
	MOV	ESI,DWORD [20+EBP]
	MOV	EAX,DWORD [4+EBX]
	MOV	EDX,DWORD [20+EBX]
	MOV	DWORD [-40+EBP],EAX
	SUB	ECX,EDX
	MOV	EAX,EBX
	SUB	EAX,EDI
	MOV	EDI,DWORD [24+EBP]
	SUB	EAX,1044
	SUB	EDI,EDX
	SAR	EAX,2
	MOV	EDX,DWORD [12+EBP]
	IMUL	EAX,EAX,954437177
	MOV	BYTE [-41+EBP],AL
	MOV	DWORD [-56+EBP],EDI
	MOV	EAX,DWORD [16+EBX]
	SUB	ESI,EAX
	SUB	EDX,EAX
	MOV	DWORD [-28+EBP],ESI
	MOV	DWORD [-24+EBP],EDX
	JS	L99
L75:
	TEST	ECX,ECX
	JS	L100
L76:
	MOV	EAX,DWORD [8+EBX]
	CMP	DWORD [-28+EBP],EAX
	JLE	L77
	MOV	DWORD [-28+EBP],EAX
L77:
	MOV	EAX,DWORD [12+EBX]
	CMP	DWORD [-56+EBP],EAX
	JLE	L78
	MOV	DWORD [-56+EBP],EAX
L78:
	MOV	ESI,ECX
	CMP	ECX,DWORD [-56+EBP]
	JGE	L94
L89:
	MOV	EDI,DWORD [20+EBX]
	MOV	ECX,DWORD [-24+EBP]
	ADD	EDI,ESI
	CMP	ECX,DWORD [-28+EBP]
	MOV	DWORD [-20+EBP],EDI
	JGE	L96
L88:
	MOV	EDX,DWORD [8+EBP]
	MOV	EDI,DWORD [-20+EBP]
	MOV	EAX,DWORD [16+EBX]
	IMUL	EDI,DWORD [8+EDX]
	ADD	EAX,ECX
	MOV	DL,BYTE [-41+EBP]
	ADD	EAX,EDI
	MOV	EDI,DWORD [-36+EBP]
	MOV	DWORD [-52+EBP],EAX
	CMP	BYTE [EAX+EDI*1],DL
	JE	L101
L85:
	INC	ECX
	CMP	ECX,DWORD [-28+EBP]
	JL	L88
L96:
	INC	ESI
	CMP	ESI,DWORD [-56+EBP]
	JL	L89
L94:
	MOV	ESI,DWORD [32+EBP]
	INC	DWORD [-16+EBP]
	CMP	DWORD [-16+EBP],ESI
	JLE	L90
L92:
	ADD	ESP,44
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L101:
	MOV	EAX,ESI
	MOV	EDX,DWORD [-40+EBP]
	IMUL	EAX,DWORD [8+EBX]
	ADD	EAX,ECX
	MOV	EDI,DWORD [-32+EBP]
	MOV	AL,BYTE [EAX+EDX*1]
	MOV	EDX,DWORD [-52+EBP]
	MOV	BYTE [EDX+EDI*1],AL
	JMP	L85
L100:
	XOR	ECX,ECX
	JMP	L76
L99:
	MOV	DWORD [-24+EBP],0
	JMP	L75
L98:
	MOV	DWORD [16+EBP],0
	JMP	L68
L97:
	MOV	DWORD [12+EBP],0
	JMP	L67
	GLOBAL	_sheet_refreshmap
_sheet_refreshmap:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,40
	MOV	EAX,DWORD [8+EBP]
	CMP	DWORD [12+EBP],0
	MOV	EAX,DWORD [4+EAX]
	MOV	DWORD [-32+EBP],EAX
	JS	L133
L103:
	CMP	DWORD [16+EBP],0
	JS	L134
L104:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [8+EDX]
	CMP	DWORD [20+EBP],EAX
	JLE	L105
	MOV	DWORD [20+EBP],EAX
L105:
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,DWORD [12+ESI]
	CMP	DWORD [24+EBP],EAX
	JLE	L106
	MOV	DWORD [24+EBP],EAX
L106:
	MOV	EAX,DWORD [8+EBP]
	MOV	EDI,DWORD [28+EBP]
	MOV	DWORD [-16+EBP],EDI
	CMP	EDI,DWORD [16+EAX]
	JG	L128
L126:
	MOV	ESI,DWORD [8+EBP]
	MOV	EDX,DWORD [-16+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	ECX,DWORD [20+ESI+EDX*4]
	MOV	EAX,ECX
	SUB	EAX,ESI
	MOV	EDI,DWORD [4+ECX]
	SUB	EAX,1044
	MOV	EDX,DWORD [20+ECX]
	SAR	EAX,2
	MOV	DWORD [-36+EBP],EDI
	IMUL	EAX,EAX,954437177
	MOV	EDI,DWORD [24+EBP]
	SUB	EBX,EDX
	SUB	EDI,EDX
	MOV	BYTE [-37+EBP],AL
	MOV	ESI,DWORD [20+EBP]
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,DWORD [16+ECX]
	MOV	DWORD [-44+EBP],EDI
	SUB	ESI,EAX
	SUB	EDX,EAX
	MOV	DWORD [-52+EBP],ESI
	MOV	DWORD [-28+EBP],EDX
	JS	L135
L111:
	TEST	EBX,EBX
	JS	L136
L112:
	MOV	EAX,DWORD [8+ECX]
	CMP	DWORD [-52+EBP],EAX
	JLE	L113
	MOV	DWORD [-52+EBP],EAX
L113:
	MOV	EAX,DWORD [12+ECX]
	CMP	DWORD [-44+EBP],EAX
	JLE	L114
	MOV	DWORD [-44+EBP],EAX
L114:
	CMP	EBX,DWORD [-44+EBP]
	JGE	L130
L125:
	MOV	ESI,DWORD [20+ECX]
	MOV	EDX,DWORD [-28+EBP]
	ADD	ESI,EBX
	CMP	EDX,DWORD [-52+EBP]
	MOV	DWORD [-24+EBP],ESI
	JGE	L132
L124:
	MOV	EAX,EBX
	MOV	EDI,DWORD [16+ECX]
	IMUL	EAX,DWORD [8+ECX]
	ADD	EDI,EDX
	MOV	ESI,DWORD [-36+EBP]
	ADD	EAX,EDX
	MOV	DWORD [-20+EBP],EDI
	MOVZX	ESI,BYTE [EAX+ESI*1]
	CMP	ESI,DWORD [24+ECX]
	JE	L121
	MOV	EDI,DWORD [8+EBP]
	MOV	EAX,DWORD [-24+EBP]
	MOV	ESI,DWORD [-32+EBP]
	IMUL	EAX,DWORD [8+EDI]
	ADD	EAX,DWORD [-20+EBP]
	MOV	DWORD [-48+EBP],EAX
	MOV	AL,BYTE [-37+EBP]
	MOV	EDI,DWORD [-48+EBP]
	MOV	BYTE [EDI+ESI*1],AL
L121:
	INC	EDX
	CMP	EDX,DWORD [-52+EBP]
	JL	L124
L132:
	INC	EBX
	CMP	EBX,DWORD [-44+EBP]
	JL	L125
L130:
	MOV	EDX,DWORD [8+EBP]
	INC	DWORD [-16+EBP]
	MOV	EAX,DWORD [-16+EBP]
	CMP	EAX,DWORD [16+EDX]
	JLE	L126
L128:
	ADD	ESP,40
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L136:
	XOR	EBX,EBX
	JMP	L112
L135:
	MOV	DWORD [-28+EBP],0
	JMP	L111
L134:
	MOV	DWORD [16+EBP],0
	JMP	L104
L133:
	MOV	DWORD [12+EBP],0
	JMP	L103
	GLOBAL	_sheet_slide
_sheet_slide:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	EAX,DWORD [12+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	EDI,DWORD [16+EBX]
	MOV	ESI,DWORD [20+EBX]
	MOV	DWORD [16+EBX],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [20+EBX],EAX
	CMP	DWORD [28+EBX],0
	JS	L137
	PUSH	0
	MOV	EAX,ESI
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,EDI
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	ESI
	PUSH	EDI
	PUSH	DWORD [EBX]
	CALL	_sheet_refreshmap
	MOV	EAX,DWORD [16+EBP]
	PUSH	DWORD [28+EBX]
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [EBX]
	CALL	_sheet_refreshmap
	MOV	EAX,DWORD [28+EBX]
	ADD	ESP,48
	DEC	EAX
	PUSH	EAX
	MOV	EAX,ESI
	PUSH	0
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,EDI
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	ESI
	PUSH	EDI
	PUSH	DWORD [EBX]
	CALL	_sheet_refreshsub
	MOV	EAX,DWORD [16+EBP]
	PUSH	DWORD [28+EBX]
	PUSH	DWORD [28+EBX]
	ADD	EAX,DWORD [12+EBX]
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [EBX]
	CALL	_sheet_refreshsub
	ADD	ESP,56
L137:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_sheet_free
_sheet_free:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	CMP	DWORD [28+EBX],0
	JS	L140
	PUSH	-1
	PUSH	EBX
	CALL	_sheet_updown
	POP	EAX
	POP	EDX
L140:
	MOV	DWORD [32+EBX],0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
