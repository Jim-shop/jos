[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_load_eflags
	EXTERN	_io_store_eflags
	EXTERN	_load_cr0
	EXTERN	_store_cr0
[FILE "memory.c"]
[SECTION .text]
	GLOBAL	_memman_free
_memman_free:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,DWORD [8+EBP]
	PUSH	EBX
	XOR	EBX,EBX
	MOV	ESI,DWORD [EDI]
	CMP	EBX,ESI
	JGE	L3
L7:
	MOV	EAX,DWORD [12+EBP]
	CMP	DWORD [16+EDI+EBX*8],EAX
	JA	L3
	INC	EBX
	CMP	EBX,ESI
	JL	L7
L3:
	TEST	EBX,EBX
	JLE	L8
	MOV	EDX,DWORD [12+EDI+EBX*8]
	MOV	EAX,DWORD [8+EDI+EBX*8]
	ADD	EAX,EDX
	CMP	EAX,DWORD [12+EBP]
	JE	L31
L8:
	CMP	EBX,ESI
	JGE	L17
	MOV	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [16+EBP]
	ADD	EAX,ECX
	CMP	EAX,DWORD [16+EDI+EBX*8]
	JE	L32
L17:
	CMP	ESI,4089
	JG	L19
	MOV	ECX,ESI
	CMP	ESI,EBX
	JLE	L29
L24:
	MOV	EAX,DWORD [8+EDI+ECX*8]
	MOV	EDX,DWORD [12+EDI+ECX*8]
	MOV	DWORD [16+EDI+ECX*8],EAX
	MOV	DWORD [20+EDI+ECX*8],EDX
	DEC	ECX
	CMP	ECX,EBX
	JG	L24
L29:
	LEA	EAX,DWORD [1+ESI]
	MOV	DWORD [EDI],EAX
	CMP	DWORD [4+EDI],EAX
	JGE	L25
	MOV	DWORD [4+EDI],EAX
L25:
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [16+EDI+EBX*8],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [20+EDI+EBX*8],EAX
L30:
	XOR	EAX,EAX
L1:
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L19:
	MOV	EAX,DWORD [12+EDI]
	MOV	EBX,DWORD [8+EDI]
	INC	EAX
	MOV	DWORD [12+EDI],EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EBX,EAX
	OR	EAX,-1
	MOV	DWORD [8+EDI],EBX
	JMP	L1
L32:
	MOV	EAX,DWORD [12+EBP]
	MOV	EDX,DWORD [20+EDI+EBX*8]
	MOV	DWORD [16+EDI+EBX*8],EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EDX,EAX
	MOV	DWORD [20+EDI+EBX*8],EDX
	JMP	L30
L31:
	MOV	EAX,DWORD [16+EBP]
	ADD	EDX,EAX
	MOV	DWORD [12+EDI+EBX*8],EDX
	CMP	EBX,DWORD [EDI]
	JGE	L30
	MOV	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [16+EBP]
	ADD	EAX,ECX
	CMP	EAX,DWORD [16+EDI+EBX*8]
	JNE	L30
	MOV	EAX,DWORD [20+EDI+EBX*8]
	ADD	EDX,EAX
	MOV	DWORD [12+EDI+EBX*8],EDX
	MOV	EAX,DWORD [EDI]
	DEC	EAX
	MOV	DWORD [EDI],EAX
	CMP	EBX,EAX
	JGE	L30
	MOV	ECX,EAX
L16:
	MOV	EAX,DWORD [24+EDI+EBX*8]
	MOV	ESI,DWORD [28+EDI+EBX*8]
	MOV	DWORD [16+EDI+EBX*8],EAX
	MOV	DWORD [20+EDI+EBX*8],ESI
	INC	EBX
	CMP	EBX,ECX
	JL	L16
	JMP	L30
	GLOBAL	_memtest
_memtest:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EDI,DWORD [12+EBP]
	CALL	_io_load_eflags
	SUB	ESP,12
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	OR	EAX,262144
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	PUSH	EAX
	CALL	_io_store_eflags
	CALL	_io_load_eflags
	ADD	ESP,16
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	TEST	EAX,262144
	JE	L34
	MOV	ESI,1
L34:
	MOV	EAX,DWORD [-16+EBP]
	SUB	ESP,12
	AND	EAX,-262145
	MOV	DWORD [-16+EBP],EAX
	MOV	EAX,DWORD [-16+EBP]
	PUSH	EAX
	CALL	_io_store_eflags
	MOV	EDX,ESI
	ADD	ESP,16
	TEST	DL,DL
	JNE	L47
L35:
	MOV	EBX,DWORD [8+EBP]
	CMP	EBX,EDI
	JA	L37
L43:
	MOV	EDX,DWORD [4092+EBX]
	LEA	ECX,DWORD [4092+EBX]
	MOV	DWORD [4092+EBX],-1437226411
	MOV	EAX,DWORD [4092+EBX]
	XOR	EAX,-1
	MOV	DWORD [4092+EBX],EAX
	MOV	EAX,DWORD [4092+EBX]
	CMP	EAX,1437226410
	JNE	L41
	MOV	EAX,DWORD [4092+EBX]
	XOR	EAX,-1
	MOV	DWORD [4092+EBX],EAX
	MOV	EAX,DWORD [4092+EBX]
	CMP	EAX,-1437226411
	JNE	L41
	MOV	DWORD [4092+EBX],EDX
	ADD	EBX,4096
	CMP	EBX,EDI
	JBE	L43
L37:
	MOV	EDX,ESI
	TEST	DL,DL
	JNE	L48
L45:
	LEA	ESP,DWORD [-12+EBP]
	MOV	EAX,EBX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L48:
	SUB	ESP,16
	CALL	_load_cr0
	AND	EAX,-1610612737
	MOV	DWORD [ESP],EAX
	CALL	_store_cr0
	ADD	ESP,16
	JMP	L45
L41:
	MOV	DWORD [ECX],EDX
	JMP	L37
L47:
	SUB	ESP,16
	CALL	_load_cr0
	OR	EAX,1610612736
	MOV	DWORD [ESP],EAX
	CALL	_store_cr0
	ADD	ESP,16
	JMP	L35
	GLOBAL	_memtest_sub
_memtest_sub:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EDX,DWORD [8+EBP]
	MOV	ESI,DWORD [12+EBP]
	CMP	EDX,ESI
	JA	L51
L57:
	MOV	ECX,DWORD [4092+EDX]
	LEA	EBX,DWORD [4092+EDX]
	MOV	DWORD [4092+EDX],-1437226411
	MOV	EAX,DWORD [4092+EDX]
	XOR	EAX,-1
	MOV	DWORD [4092+EDX],EAX
	MOV	EAX,DWORD [4092+EDX]
	CMP	EAX,1437226410
	JNE	L55
	MOV	EAX,DWORD [4092+EDX]
	XOR	EAX,-1
	MOV	DWORD [4092+EDX],EAX
	MOV	EAX,DWORD [4092+EDX]
	CMP	EAX,-1437226411
	JNE	L55
	MOV	DWORD [4092+EDX],ECX
	ADD	EDX,4096
	CMP	EDX,ESI
	JBE	L57
L51:
	POP	EBX
	MOV	EAX,EDX
	POP	ESI
	POP	EBP
	RET
L55:
	MOV	DWORD [EBX],ECX
	JMP	L51
	GLOBAL	_memman_init
_memman_init:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [EAX],0
	MOV	DWORD [4+EAX],0
	MOV	DWORD [8+EAX],0
	MOV	DWORD [12+EAX],0
	POP	EBP
	RET
	GLOBAL	_memman_total
_memman_total:
	PUSH	EBP
	XOR	EAX,EAX
	MOV	EBP,ESP
	XOR	EDX,EDX
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	MOV	ECX,DWORD [EBX]
	CMP	EAX,ECX
	JAE	L67
L65:
	ADD	EAX,DWORD [20+EBX+EDX*8]
	INC	EDX
	CMP	EDX,ECX
	JB	L65
L67:
	POP	EBX
	POP	EBP
	RET
	GLOBAL	_memman_alloc
_memman_alloc:
	PUSH	EBP
	XOR	ECX,ECX
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [12+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	EAX,DWORD [EBX]
	CMP	ECX,EAX
	JAE	L82
L80:
	MOV	EDX,DWORD [20+EBX+ECX*8]
	CMP	EDX,ESI
	JAE	L84
	INC	ECX
	CMP	ECX,EAX
	JB	L80
L82:
	XOR	EAX,EAX
L68:
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L84:
	MOV	EDI,DWORD [16+EBX+ECX*8]
	LEA	EAX,DWORD [ESI+EDI*1]
	MOV	DWORD [16+EBX+ECX*8],EAX
	MOV	EAX,EDX
	SUB	EAX,ESI
	MOV	DWORD [20+EBX+ECX*8],EAX
	TEST	EAX,EAX
	JNE	L74
	MOV	EAX,DWORD [EBX]
	DEC	EAX
	MOV	DWORD [EBX],EAX
	CMP	ECX,EAX
	JAE	L74
	MOV	ESI,EAX
L79:
	MOV	EAX,DWORD [24+EBX+ECX*8]
	MOV	EDX,DWORD [28+EBX+ECX*8]
	MOV	DWORD [16+EBX+ECX*8],EAX
	MOV	DWORD [20+EBX+ECX*8],EDX
	INC	ECX
	CMP	ECX,ESI
	JB	L79
L74:
	MOV	EAX,EDI
	JMP	L68
	GLOBAL	_memman_alloc_4k
_memman_alloc_4k:
	PUSH	EBP
	XOR	ECX,ECX
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [12+EBP]
	MOV	EBX,DWORD [8+EBP]
	ADD	ESI,4095
	AND	ESI,-4096
	MOV	EAX,DWORD [EBX]
	CMP	ECX,EAX
	JAE	L100
L98:
	MOV	EDX,DWORD [20+EBX+ECX*8]
	CMP	EDX,ESI
	JAE	L102
	INC	ECX
	CMP	ECX,EAX
	JB	L98
L100:
	XOR	EAX,EAX
L97:
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L102:
	MOV	EDI,DWORD [16+EBX+ECX*8]
	LEA	EAX,DWORD [ESI+EDI*1]
	MOV	DWORD [16+EBX+ECX*8],EAX
	MOV	EAX,EDX
	SUB	EAX,ESI
	MOV	DWORD [20+EBX+ECX*8],EAX
	TEST	EAX,EAX
	JNE	L91
	MOV	EAX,DWORD [EBX]
	DEC	EAX
	MOV	DWORD [EBX],EAX
	CMP	ECX,EAX
	JAE	L91
	MOV	ESI,EAX
L96:
	MOV	EAX,DWORD [24+EBX+ECX*8]
	MOV	EDX,DWORD [28+EBX+ECX*8]
	MOV	DWORD [16+EBX+ECX*8],EAX
	MOV	DWORD [20+EBX+ECX*8],EDX
	INC	ECX
	CMP	ECX,ESI
	JB	L96
L91:
	MOV	EAX,EDI
	JMP	L97
	GLOBAL	_memman_free_4k
_memman_free_4k:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,4095
	AND	EAX,-4096
	MOV	DWORD [16+EBP],EAX
	POP	EBP
	JMP	_memman_free
