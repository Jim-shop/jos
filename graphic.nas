[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_table_rgb.0
	EXTERN	_io_load_eflags
	EXTERN	_io_cli
	EXTERN	_io_out8
	EXTERN	_io_store_eflags
	EXTERN	_font
[FILE "graphic.c"]
[SECTION .data]
_table_rgb.0:
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	0
	DB	0
	DB	-1
	DB	-1
	DB	0
	DB	-1
	DB	0
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-1
	DB	-58
	DB	-58
	DB	-58
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	0
	DB	0
	DB	-124
	DB	-124
	DB	0
	DB	-124
	DB	0
	DB	-124
	DB	-124
	DB	-124
	DB	-124
	DB	-124
[SECTION .text]
	GLOBAL	_init_palette
_init_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,15
	PUSH	EBX
	MOV	EBX,_table_rgb.0
	SUB	ESP,12
	CALL	_io_load_eflags
	MOV	EDI,EAX
	CALL	_io_cli
	PUSH	EAX
	PUSH	EAX
	PUSH	0
	PUSH	968
	CALL	_io_out8
	ADD	ESP,16
L6:
	MOV	CL,BYTE [EBX]
	SHR	CL,2
	PUSH	EAX
	PUSH	EAX
	AND	ECX,255
	PUSH	ECX
	PUSH	969
	CALL	_io_out8
	MOV	DL,BYTE [1+EBX]
	SHR	DL,2
	POP	ECX
	POP	EAX
	AND	EDX,255
	PUSH	EDX
	PUSH	969
	CALL	_io_out8
	POP	EAX
	POP	EDX
	MOV	DL,BYTE [2+EBX]
	SHR	DL,2
	ADD	EBX,3
	AND	EDX,255
	PUSH	EDX
	PUSH	969
	CALL	_io_out8
	ADD	ESP,16
	DEC	ESI
	JNS	L6
	SUB	ESP,12
	PUSH	EDI
	CALL	_io_store_eflags
	ADD	ESP,16
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_set_palette
_set_palette:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	ESI,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	EBX,DWORD [16+EBP]
	CALL	_io_load_eflags
	MOV	DWORD [-16+EBP],EAX
	CALL	_io_cli
	PUSH	EAX
	PUSH	EAX
	PUSH	ESI
	PUSH	968
	CALL	_io_out8
	ADD	ESP,16
	CMP	ESI,EDI
	JLE	L15
L17:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_io_store_eflags
L15:
	INC	ESI
	PUSH	EAX
	PUSH	EAX
	MOV	CL,BYTE [EBX]
	SHR	CL,2
	AND	ECX,255
	PUSH	ECX
	PUSH	969
	CALL	_io_out8
	MOV	DL,BYTE [1+EBX]
	SHR	DL,2
	POP	ECX
	POP	EAX
	AND	EDX,255
	PUSH	EDX
	PUSH	969
	CALL	_io_out8
	POP	EAX
	POP	EDX
	MOV	DL,BYTE [2+EBX]
	SHR	DL,2
	ADD	EBX,3
	AND	EDX,255
	PUSH	EDX
	PUSH	969
	CALL	_io_out8
	ADD	ESP,16
	CMP	ESI,EDI
	JLE	L15
	JMP	L17
	GLOBAL	_boxfill8
_boxfill8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EAX
	PUSH	EAX
	MOV	EBX,DWORD [24+EBP]
	MOV	EDI,DWORD [32+EBP]
	MOV	ESI,DWORD [28+EBP]
	CMP	EBX,EDI
	JG	L30
	MOV	EAX,DWORD [12+EBP]
	IMUL	EAX,EBX
	MOV	DWORD [-20+EBP],EAX
L28:
	MOV	EDX,DWORD [20+EBP]
	CMP	EDX,ESI
	JG	L32
	MOV	EAX,DWORD [8+EBP]
	MOV	ECX,DWORD [-20+EBP]
	ADD	ECX,EAX
	LEA	EAX,DWORD [ECX+EDX*1]
L27:
	MOV	CL,BYTE [16+EBP]
	INC	EDX
	MOV	BYTE [EAX],CL
	INC	EAX
	CMP	EDX,ESI
	JLE	L27
L32:
	MOV	EDX,DWORD [-20+EBP]
	MOV	EAX,DWORD [12+EBP]
	ADD	EDX,EAX
	INC	EBX
	MOV	DWORD [-20+EBP],EDX
	CMP	EBX,EDI
	JLE	L28
L30:
	POP	EAX
	POP	EDX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC0:
	DB	"jos",0x00
[SECTION .text]
	GLOBAL	_init_screen8
_init_screen8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,64
	MOV	ESI,DWORD [12+EBP]
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,29
	LEA	EDI,DWORD [-1+ESI]
	MOV	DWORD [-16+EBP],EAX
	CMP	EBX,EAX
	JG	L249
	XOR	ECX,ECX
L43:
	TEST	EDI,EDI
	JS	L251
	MOV	EAX,DWORD [8+EBP]
	LEA	EDX,DWORD [EAX+ECX*1]
	LEA	EAX,DWORD [1+EDI]
L42:
	MOV	BYTE [EDX],14
	INC	EDX
	DEC	EAX
	JNE	L42
L251:
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,DWORD [-16+EBP]
	JLE	L43
L249:
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,28
	IMUL	EAX,ESI
	TEST	EDI,EDI
	JS	L255
	MOV	EBX,DWORD [8+EBP]
	LEA	EDX,DWORD [EBX+EAX*1]
	LEA	EAX,DWORD [1+EDI]
L53:
	MOV	BYTE [EDX],8
	INC	EDX
	DEC	EAX
	JNE	L53
L255:
	MOV	EAX,DWORD [16+EBP]
	SUB	EAX,27
	IMUL	EAX,ESI
	TEST	EDI,EDI
	JS	L259
	MOV	ECX,DWORD [8+EBP]
	LEA	EDX,DWORD [ECX+EAX*1]
	LEA	EAX,DWORD [1+EDI]
L64:
	MOV	BYTE [EDX],7
	INC	EDX
	DEC	EAX
	JNE	L64
L259:
	MOV	EBX,DWORD [16+EBP]
	MOV	EAX,DWORD [16+EBP]
	DEC	EAX
	SUB	EBX,26
	MOV	DWORD [-20+EBP],EAX
	CMP	EBX,EAX
	JG	L261
	MOV	ECX,EBX
	IMUL	ECX,ESI
L76:
	TEST	EDI,EDI
	JS	L263
	MOV	EAX,DWORD [8+EBP]
	LEA	EDX,DWORD [EAX+ECX*1]
	LEA	EAX,DWORD [1+EDI]
L75:
	MOV	BYTE [EDX],8
	INC	EDX
	DEC	EAX
	JNE	L75
L263:
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,DWORD [-20+EBP]
	JLE	L76
L261:
	MOV	EBX,DWORD [16+EBP]
	SUB	EBX,24
	MOV	ECX,EBX
	MOV	DWORD [-64+EBP],EBX
	IMUL	ECX,ESI
	MOV	EDI,EBX
L87:
	MOV	EDX,DWORD [8+EBP]
	LEA	EAX,DWORD [3+EDX+ECX*1]
	MOV	EDX,56
L86:
	MOV	BYTE [EAX],7
	INC	EAX
	DEC	EDX
	JNS	L86
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,EDI
	JLE	L87
	MOV	EAX,DWORD [16+EBP]
	MOV	EDX,DWORD [-64+EBP]
	SUB	EAX,4
	MOV	DWORD [-24+EBP],EAX
	CMP	EDX,EAX
	JG	L269
	MOV	EAX,EDX
	IMUL	EAX,ESI
L98:
	MOV	EDI,DWORD [8+EBP]
	INC	EDX
	MOV	BYTE [2+EDI+EAX*1],7
	ADD	EAX,ESI
	CMP	EDX,DWORD [-24+EBP]
	JLE	L98
L269:
	MOV	EBX,DWORD [-24+EBP]
	MOV	ECX,EBX
	MOV	EDI,EBX
	IMUL	ECX,ESI
L109:
	MOV	EDX,DWORD [8+EBP]
	LEA	EAX,DWORD [3+EDX+ECX*1]
	MOV	EDX,56
L108:
	MOV	BYTE [EAX],15
	INC	EAX
	DEC	EDX
	JNS	L108
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,EDI
	JLE	L109
	MOV	EDX,DWORD [16+EBP]
	MOV	ECX,DWORD [16+EBP]
	SUB	EDX,23
	SUB	ECX,5
	MOV	DWORD [-68+EBP],EDX
	CMP	EDX,ECX
	JG	L277
	MOV	EAX,EDX
	IMUL	EAX,ESI
L120:
	MOV	EDI,DWORD [8+EBP]
	INC	EDX
	MOV	BYTE [59+EDI+EAX*1],15
	ADD	EAX,ESI
	CMP	EDX,ECX
	JLE	L120
L277:
	MOV	EBX,DWORD [16+EBP]
	SUB	EBX,3
	MOV	ECX,EBX
	MOV	DWORD [-72+EBP],EBX
	IMUL	ECX,ESI
	MOV	EDI,EBX
L131:
	MOV	EDX,DWORD [8+EBP]
	LEA	EAX,DWORD [2+EDX+ECX*1]
	MOV	EDX,57
L130:
	MOV	BYTE [EAX],0
	INC	EAX
	DEC	EDX
	JNS	L130
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,EDI
	JLE	L131
	MOV	EDX,DWORD [-64+EBP]
	MOV	EBX,DWORD [-72+EBP]
	CMP	EDX,EBX
	JG	L285
	MOV	EAX,EDX
	IMUL	EAX,ESI
L142:
	MOV	ECX,DWORD [8+EBP]
	INC	EDX
	MOV	BYTE [60+ECX+EAX*1],0
	ADD	EAX,ESI
	CMP	EDX,DWORD [-72+EBP]
	JLE	L142
L285:
	MOV	AL,BYTE [LC0]
	MOV	DWORD [-28+EBP],17
	MOV	DWORD [-32+EBP],LC0
	TEST	AL,AL
	JE	L289
	MOV	DL,AL
	MOV	EDI,DWORD [8+EBP]
	MOV	EAX,DWORD [-68+EBP]
	IMUL	EAX,ESI
	ADD	EAX,EDI
	MOV	DWORD [-36+EBP],EAX
L162:
	MOVSX	EBX,DL
	SAL	EBX,4
	MOV	ECX,DWORD [-36+EBP]
	MOV	EAX,DWORD [-28+EBP]
	LEA	EDI,DWORD [_font+EBX]
	ADD	ECX,EAX
	XOR	EBX,EBX
L160:
	MOV	DL,BYTE [EBX+EDI*1]
	TEST	DL,DL
	JNS	L152
	MOV	BYTE [ECX],7
L152:
	MOV	AL,DL
	AND	EAX,64
	TEST	AL,AL
	JE	L153
	MOV	BYTE [1+ECX],7
L153:
	MOV	AL,DL
	AND	EAX,32
	TEST	AL,AL
	JE	L154
	MOV	BYTE [2+ECX],7
L154:
	MOV	AL,DL
	AND	EAX,16
	TEST	AL,AL
	JE	L155
	MOV	BYTE [3+ECX],7
L155:
	MOV	AL,DL
	AND	EAX,8
	TEST	AL,AL
	JE	L156
	MOV	BYTE [4+ECX],7
L156:
	MOV	AL,DL
	AND	EAX,4
	TEST	AL,AL
	JE	L157
	MOV	BYTE [5+ECX],7
L157:
	MOV	AL,DL
	AND	EAX,2
	TEST	AL,AL
	JE	L158
	MOV	BYTE [6+ECX],7
L158:
	AND	EDX,1
	TEST	DL,DL
	JE	L159
	MOV	BYTE [7+ECX],7
L159:
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,15
	JLE	L160
	MOV	EAX,DWORD [-32+EBP]
	MOV	EBX,DWORD [-28+EBP]
	INC	EAX
	ADD	EBX,8
	MOV	DWORD [-32+EBP],EAX
	MOV	DWORD [-28+EBP],EBX
	MOV	EDX,DWORD [-32+EBP]
	MOV	CL,BYTE [EDX]
	MOV	DL,CL
	TEST	CL,CL
	JNE	L162
	MOV	AL,BYTE [LC0]
L289:
	MOV	EDX,DWORD [16+EBP]
	SUB	EDX,22
	TEST	AL,AL
	MOV	DWORD [-40+EBP],18
	MOV	DWORD [-44+EBP],LC0
	JE	L293
	IMUL	EDX,ESI
	MOV	EDI,DWORD [8+EBP]
	MOV	AL,BYTE [LC0]
	ADD	EDX,EDI
	MOV	DWORD [-48+EBP],EDX
L182:
	MOVSX	ECX,AL
	SAL	ECX,4
	MOV	EAX,DWORD [-40+EBP]
	XOR	EBX,EBX
	LEA	EDI,DWORD [_font+ECX]
	MOV	ECX,DWORD [-48+EBP]
	ADD	ECX,EAX
L180:
	MOV	DL,BYTE [EBX+EDI*1]
	TEST	DL,DL
	JNS	L172
	MOV	BYTE [ECX],1
L172:
	MOV	AL,DL
	AND	EAX,64
	TEST	AL,AL
	JE	L173
	MOV	BYTE [1+ECX],1
L173:
	MOV	AL,DL
	AND	EAX,32
	TEST	AL,AL
	JE	L174
	MOV	BYTE [2+ECX],1
L174:
	MOV	AL,DL
	AND	EAX,16
	TEST	AL,AL
	JE	L175
	MOV	BYTE [3+ECX],1
L175:
	MOV	AL,DL
	AND	EAX,8
	TEST	AL,AL
	JE	L176
	MOV	BYTE [4+ECX],1
L176:
	MOV	AL,DL
	AND	EAX,4
	TEST	AL,AL
	JE	L177
	MOV	BYTE [5+ECX],1
L177:
	MOV	AL,DL
	AND	EAX,2
	TEST	AL,AL
	JE	L178
	MOV	BYTE [6+ECX],1
L178:
	AND	EDX,1
	TEST	DL,DL
	JE	L179
	MOV	BYTE [7+ECX],1
L179:
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,15
	JLE	L180
	MOV	EDX,DWORD [-44+EBP]
	MOV	EAX,DWORD [-40+EBP]
	INC	EDX
	ADD	EAX,8
	MOV	DWORD [-44+EBP],EDX
	MOV	DWORD [-40+EBP],EAX
	MOV	EBX,DWORD [-44+EBP]
	MOV	AL,BYTE [EBX]
	TEST	AL,AL
	JNE	L182
	MOV	AL,BYTE [LC0]
L293:
	MOV	EDX,DWORD [16+EBP]
	SUB	EDX,21
	TEST	AL,AL
	MOV	DWORD [-52+EBP],19
	MOV	DWORD [-56+EBP],LC0
	JE	L297
	IMUL	EDX,ESI
	MOV	EDI,DWORD [8+EBP]
	MOV	AL,BYTE [LC0]
	ADD	EDX,EDI
	MOV	DWORD [-60+EBP],EDX
L202:
	MOVSX	ECX,AL
	SAL	ECX,4
	MOV	EAX,DWORD [-52+EBP]
	XOR	EBX,EBX
	LEA	EDI,DWORD [_font+ECX]
	MOV	ECX,DWORD [-60+EBP]
	ADD	ECX,EAX
L200:
	MOV	DL,BYTE [EBX+EDI*1]
	TEST	DL,DL
	JNS	L192
	MOV	BYTE [ECX],5
L192:
	MOV	AL,DL
	AND	EAX,64
	TEST	AL,AL
	JE	L193
	MOV	BYTE [1+ECX],5
L193:
	MOV	AL,DL
	AND	EAX,32
	TEST	AL,AL
	JE	L194
	MOV	BYTE [2+ECX],5
L194:
	MOV	AL,DL
	AND	EAX,16
	TEST	AL,AL
	JE	L195
	MOV	BYTE [3+ECX],5
L195:
	MOV	AL,DL
	AND	EAX,8
	TEST	AL,AL
	JE	L196
	MOV	BYTE [4+ECX],5
L196:
	MOV	AL,DL
	AND	EAX,4
	TEST	AL,AL
	JE	L197
	MOV	BYTE [5+ECX],5
L197:
	MOV	AL,DL
	AND	EAX,2
	TEST	AL,AL
	JE	L198
	MOV	BYTE [6+ECX],5
L198:
	AND	EDX,1
	TEST	DL,DL
	JE	L199
	MOV	BYTE [7+ECX],5
L199:
	INC	EBX
	ADD	ECX,ESI
	CMP	EBX,15
	JLE	L200
	MOV	EAX,DWORD [-52+EBP]
	ADD	EAX,8
	MOV	DWORD [-52+EBP],EAX
	MOV	EAX,DWORD [-56+EBP]
	INC	EAX
	MOV	DWORD [-56+EBP],EAX
	MOV	EBX,DWORD [-56+EBP]
	MOV	AL,BYTE [EBX]
	TEST	AL,AL
	JNE	L202
L297:
	LEA	EDX,DWORD [-47+ESI]
	LEA	EBX,DWORD [-4+ESI]
	MOV	DWORD [-76+EBP],EDX
	MOV	EAX,DWORD [-64+EBP]
	MOV	EDX,DWORD [-76+EBP]
	IMUL	EAX,ESI
	CMP	EDX,EBX
	JG	L303
	MOV	ECX,DWORD [8+EBP]
	ADD	EAX,ECX
	ADD	EAX,EDX
L212:
	INC	EDX
	MOV	BYTE [EAX],15
	INC	EAX
	CMP	EDX,EBX
	JLE	L212
L303:
	MOV	ECX,DWORD [-68+EBP]
	CMP	ECX,DWORD [-24+EBP]
	JG	L305
	MOV	EDX,ECX
	IMUL	EDX,ESI
L224:
	MOV	EDI,DWORD [8+EBP]
	INC	ECX
	LEA	EAX,DWORD [EDI+EDX*1]
	ADD	EDX,ESI
	MOV	EDI,DWORD [-76+EBP]
	MOV	BYTE [EAX+EDI*1],15
	CMP	ECX,DWORD [-24+EBP]
	JLE	L224
L305:
	MOV	EAX,DWORD [-72+EBP]
	MOV	EDX,DWORD [-76+EBP]
	IMUL	EAX,ESI
	CMP	EDX,EBX
	JG	L311
	MOV	EDI,DWORD [8+EBP]
	ADD	EAX,EDI
	LEA	EAX,DWORD [EAX+EDX*1]
L234:
	INC	EDX
	MOV	BYTE [EAX],7
	INC	EAX
	CMP	EDX,EBX
	JLE	L234
L311:
	MOV	ECX,DWORD [-64+EBP]
	LEA	EBX,DWORD [-3+ESI]
	CMP	ECX,DWORD [-72+EBP]
	JG	L313
	MOV	EDX,ECX
	IMUL	EDX,ESI
L246:
	MOV	EDI,DWORD [8+EBP]
	INC	ECX
	LEA	EAX,DWORD [EDI+EDX*1]
	ADD	EDX,ESI
	MOV	BYTE [EAX+EBX*1],7
	CMP	ECX,DWORD [-72+EBP]
	JLE	L246
L313:
	ADD	ESP,64
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_putfont8
_putfont8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	MOV	EDI,DWORD [12+EBP]
	MOV	ECX,DWORD [20+EBP]
	IMUL	ECX,EDI
	MOV	EAX,DWORD [8+EBP]
	PUSH	EBX
	ADD	ECX,EAX
	MOV	BL,BYTE [24+EBP]
	MOV	EAX,DWORD [16+EBP]
	ADD	ECX,EAX
L329:
	MOV	EAX,DWORD [28+EBP]
	MOV	DL,BYTE [ESI+EAX*1]
	TEST	DL,DL
	JNS	L321
	MOV	BYTE [ECX],BL
L321:
	MOV	AL,DL
	AND	EAX,64
	TEST	AL,AL
	JE	L322
	MOV	BYTE [1+ECX],BL
L322:
	MOV	AL,DL
	AND	EAX,32
	TEST	AL,AL
	JE	L323
	MOV	BYTE [2+ECX],BL
L323:
	MOV	AL,DL
	AND	EAX,16
	TEST	AL,AL
	JE	L324
	MOV	BYTE [3+ECX],BL
L324:
	MOV	AL,DL
	AND	EAX,8
	TEST	AL,AL
	JE	L325
	MOV	BYTE [4+ECX],BL
L325:
	MOV	AL,DL
	AND	EAX,4
	TEST	AL,AL
	JE	L326
	MOV	BYTE [5+ECX],BL
L326:
	MOV	AL,DL
	AND	EAX,2
	TEST	AL,AL
	JE	L327
	MOV	BYTE [6+ECX],BL
L327:
	AND	EDX,1
	TEST	DL,DL
	JE	L328
	MOV	BYTE [7+ECX],BL
L328:
	INC	ESI
	ADD	ECX,EDI
	CMP	ESI,15
	JLE	L329
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_putfonts8_asc
_putfonts8_asc:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDI
	MOV	EAX,DWORD [28+EBP]
	MOV	BL,BYTE [24+EBP]
	MOV	DL,BYTE [EAX]
	TEST	DL,DL
	JE	L353
	MOV	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [20+EBP]
	IMUL	EAX,ECX
	MOV	ESI,DWORD [8+EBP]
	ADD	EAX,ESI
	MOV	DWORD [-16+EBP],EAX
L351:
	MOVSX	ESI,DL
	SAL	ESI,4
	MOV	ECX,DWORD [-16+EBP]
	MOV	EAX,DWORD [16+EBP]
	LEA	EDI,DWORD [_font+ESI]
	ADD	ECX,EAX
	XOR	ESI,ESI
L349:
	MOV	DL,BYTE [ESI+EDI*1]
	TEST	DL,DL
	JNS	L341
	MOV	BYTE [ECX],BL
L341:
	MOV	AL,DL
	AND	EAX,64
	TEST	AL,AL
	JE	L342
	MOV	BYTE [1+ECX],BL
L342:
	MOV	AL,DL
	AND	EAX,32
	TEST	AL,AL
	JE	L343
	MOV	BYTE [2+ECX],BL
L343:
	MOV	AL,DL
	AND	EAX,16
	TEST	AL,AL
	JE	L344
	MOV	BYTE [3+ECX],BL
L344:
	MOV	AL,DL
	AND	EAX,8
	TEST	AL,AL
	JE	L345
	MOV	BYTE [4+ECX],BL
L345:
	MOV	AL,DL
	AND	EAX,4
	TEST	AL,AL
	JE	L346
	MOV	BYTE [5+ECX],BL
L346:
	MOV	AL,DL
	AND	EAX,2
	TEST	AL,AL
	JE	L347
	MOV	BYTE [6+ECX],BL
L347:
	AND	EDX,1
	TEST	DL,DL
	JE	L348
	MOV	BYTE [7+ECX],BL
L348:
	MOV	EAX,DWORD [12+EBP]
	INC	ESI
	ADD	ECX,EAX
	CMP	ESI,15
	JLE	L349
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	MOV	DWORD [16+EBP],EAX
	MOV	EAX,DWORD [28+EBP]
	INC	EAX
	MOV	DWORD [28+EBP],EAX
	MOV	EAX,DWORD [28+EBP]
	MOV	CL,BYTE [EAX]
	MOV	DL,CL
	TEST	CL,CL
	JNE	L351
L353:
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
_cursor.1:
	DB	"**************.."
	DB	"*OOOOOOOOOOO*..."
	DB	"*OOOOOOOOOO*...."
	DB	"*OOOOOOOOO*....."
	DB	"*OOOOOOOO*......"
	DB	"*OOOOOOO*......."
	DB	"*OOOOOOO*......."
	DB	"*OOOOOOOO*......"
	DB	"*OOOO**OOO*....."
	DB	"*OOO*..*OOO*...."
	DB	"*OO*....*OOO*..."
	DB	"*O*......*OOO*.."
	DB	"**........*OOO*."
	DB	"*..........*OOO*"
	DB	"............*OO*"
	DB	".............***"
[SECTION .text]
	GLOBAL	_init_mouse_cursor8
_init_mouse_cursor8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	EDI,EDI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
L370:
	MOV	EBX,EDI
	XOR	ECX,ECX
	SAL	EBX,4
L369:
	LEA	EDX,DWORD [ECX+EBX*1]
	MOV	AL,BYTE [_cursor.1+EDX]
	CMP	AL,42
	JE	L375
	CMP	AL,79
	JE	L376
	MOV	AL,BYTE [12+EBP]
	MOV	BYTE [EDX+ESI*1],AL
L363:
	INC	ECX
	CMP	ECX,15
	JLE	L369
	INC	EDI
	CMP	EDI,15
	JLE	L370
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L376:
	MOV	BYTE [EDX+ESI*1],7
	JMP	L363
L375:
	MOV	BYTE [EDX+ESI*1],0
	JMP	L363
	GLOBAL	_putblock8_8
_putblock8_8:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	CMP	ESI,DWORD [20+EBP]
	JGE	L389
	XOR	EDI,EDI
L387:
	MOV	EAX,DWORD [16+EBP]
	TEST	EAX,EAX
	JLE	L391
	MOV	ECX,DWORD [28+EBP]
	MOV	EDX,DWORD [12+EBP]
	MOV	EBX,DWORD [24+EBP]
	LEA	EAX,DWORD [ESI+ECX*1]
	MOV	ECX,DWORD [8+EBP]
	IMUL	EAX,EDX
	ADD	EAX,EBX
	MOV	EDX,DWORD [16+EBP]
	LEA	EBX,DWORD [ECX+EAX*1]
	MOV	EAX,DWORD [32+EBP]
	LEA	ECX,DWORD [EAX+EDI*1]
L386:
	MOV	AL,BYTE [ECX]
	INC	ECX
	MOV	BYTE [EBX],AL
	INC	EBX
	DEC	EDX
	JNE	L386
L391:
	MOV	EAX,DWORD [36+EBP]
	INC	ESI
	ADD	EDI,EAX
	CMP	ESI,DWORD [20+EBP]
	JL	L387
L389:
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
