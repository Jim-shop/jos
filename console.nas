[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_sheet_refresh
	EXTERN	_task_now
	EXTERN	_fifo32_init
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_memman_alloc_4k
	EXTERN	_file_readfat
	EXTERN	_putfont8_sht
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_boxfill8
	EXTERN	_sprintf
	EXTERN	_putfonts8_asc_sht
	EXTERN	_memman_total
	EXTERN	_file_loadfile
	EXTERN	_memman_free_4k
	EXTERN	_task_sleep
[FILE "console.c"]
[SECTION .text]
	GLOBAL	_cons_newline
_cons_newline:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,28
	PUSH	EBX
	CMP	DWORD [8+EBP],139
	JG	L13
	ADD	DWORD [8+EBP],16
L3:
	MOV	EAX,DWORD [8+EBP]
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L13:
	MOV	ESI,8
L12:
	MOV	EAX,DWORD [12+EBP]
	MOV	EDX,EDI
	MOV	ECX,DWORD [8+EAX]
	MOV	EBX,DWORD [4+EAX]
	LEA	EAX,DWORD [16+EDI]
	IMUL	EAX,ECX
	IMUL	EDX,ECX
	LEA	EAX,DWORD [EAX+ESI*1]
	LEA	EDX,DWORD [EDX+ESI*1]
	INC	ESI
	MOV	AL,BYTE [EAX+EBX*1]
	CMP	ESI,247
	MOV	BYTE [EDX+EBX*1],AL
	JLE	L12
	INC	EDI
	CMP	EDI,139
	JLE	L13
	MOV	EDI,140
L23:
	MOV	ESI,8
L22:
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,EDI
	MOV	ECX,EDX
	IMUL	EAX,DWORD [8+EDX]
	MOV	EDX,DWORD [4+EDX]
	LEA	EAX,DWORD [EAX+ESI*1]
	INC	ESI
	CMP	ESI,247
	MOV	BYTE [EAX+EDX*1],0
	JLE	L22
	INC	EDI
	CMP	EDI,155
	JLE	L23
	PUSH	156
	PUSH	248
	PUSH	28
	PUSH	8
	PUSH	ECX
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L3
[SECTION .data]
LC0:
	DB	"mem",0x00
LC1:
	DB	"total   %dMB",0x00
LC2:
	DB	"free %dKB",0x00
LC3:
	DB	"cls",0x00
LC4:
	DB	"dir",0x00
LC5:
	DB	"filename.ext   %7d",0x00
LC6:
	DB	"type ",0x00
LC7:
	DB	"File not found.",0x00
LC8:
	DB	"Wrong instruction.",0x00
[SECTION .text]
	GLOBAL	_console_task
_console_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,16
	PUSH	EBX
	SUB	ESP,604
	CALL	_task_now
	PUSH	EAX
	MOV	DWORD [-592+EBP],EAX
	LEA	EAX,DWORD [-524+EBP]
	MOV	EBX,DWORD [-592+EBP]
	PUSH	EAX
	ADD	EBX,16
	PUSH	128
	PUSH	EBX
	CALL	_fifo32_init
	MOV	DWORD [-596+EBP],28
	MOV	DWORD [-600+EBP],-1
	CALL	_timer_alloc
	PUSH	1
	PUSH	EBX
	PUSH	EAX
	MOV	DWORD [-604+EBP],EAX
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [-604+EBP]
	CALL	_timer_settime
	ADD	ESP,36
	PUSH	5760
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	1049088
	PUSH	EAX
	MOV	DWORD [-616+EBP],EAX
	CALL	_file_readfat
	PUSH	62
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	ADD	ESP,40
L33:
	CALL	_io_cli
	MOV	EBX,DWORD [-592+EBP]
	ADD	EBX,16
	PUSH	EBX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L154
	PUSH	EBX
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	ESI
	CMP	EBX,2
	JE	L44
	CMP	EBX,2
	JG	L135
	TEST	EBX,EBX
	JS	L38
	TEST	EBX,EBX
	JE	L40
	MOV	EAX,DWORD [-592+EBP]
	PUSH	0
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [-604+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-600+EBP],0
	JS	L42
	MOV	DWORD [-600+EBP],7
L42:
	PUSH	50
	PUSH	DWORD [-604+EBP]
	CALL	_timer_settime
	POP	ECX
	POP	EBX
L38:
	CMP	DWORD [-600+EBP],0
	JS	L136
	MOV	EAX,DWORD [-596+EBP]
	ADD	EAX,15
	PUSH	EAX
	LEA	EAX,DWORD [7+EDI]
	PUSH	EAX
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	MOVZX	EAX,BYTE [-600+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [8+EAX]
	PUSH	DWORD [4+EAX]
	CALL	_boxfill8
	ADD	ESP,28
L136:
	MOV	EAX,DWORD [-596+EBP]
	ADD	EAX,16
	PUSH	EAX
	LEA	EAX,DWORD [8+EDI]
	PUSH	EAX
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L33
L40:
	MOV	EAX,DWORD [-592+EBP]
	PUSH	1
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [-604+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-600+EBP],0
	JS	L42
	MOV	DWORD [-600+EBP],0
	JMP	L42
L135:
	CMP	EBX,3
	JE	L45
	LEA	EAX,DWORD [-256+EBX]
	CMP	EAX,255
	JA	L38
	CMP	EBX,264
	JE	L48
	CMP	EBX,266
	JE	L50
	CMP	EDI,239
	JG	L38
	MOV	EAX,EDI
	MOV	EDX,8
	MOV	ESI,EDX
	CDQ
	IDIV	ESI
	MOV	BYTE [-558+EBP+EAX*1],BL
	MOVSX	EAX,BL
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
L153:
	ADD	ESP,24
	JMP	L38
L50:
	PUSH	32
	LEA	ESI,DWORD [-556+EBP]
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	MOV	EAX,EDI
	MOV	EDX,8
	MOV	EDI,LC0
	MOV	EBX,EDX
	CDQ
	IDIV	EBX
	PUSH	DWORD [8+EBP]
	MOV	BYTE [-558+EBP+EAX*1],0
	PUSH	DWORD [-596+EBP]
	CALL	_cons_newline
	MOV	ECX,4
	CLD
	MOV	DWORD [-596+EBP],EAX
	REPE
	CMPSB
	SETA	DL
	SETB	AL
	ADD	ESP,32
	CMP	DL,AL
	JNE	L51
	MOV	EAX,DWORD [12+EBP]
	LEA	EBX,DWORD [-588+EBP]
	SHR	EAX,20
	PUSH	EAX
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	30
	PUSH	EBX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,40
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	CALL	_cons_newline
	PUSH	3932160
	MOV	DWORD [-596+EBP],EAX
	CALL	_memman_total
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	PUSH	LC2
	PUSH	EBX
	CALL	_sprintf
	PUSH	30
	PUSH	EBX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,48
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	CALL	_cons_newline
	PUSH	DWORD [8+EBP]
	PUSH	EAX
	MOV	DWORD [-596+EBP],EAX
	CALL	_cons_newline
	ADD	ESP,16
	MOV	DWORD [-596+EBP],EAX
L52:
	PUSH	62
	MOV	EDI,16
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	JMP	L153
L51:
	CLD
	LEA	ESI,DWORD [-556+EBP]
	MOV	EDI,LC3
	MOV	ECX,4
	REPE
	CMPSB
	JNE	L53
	MOV	EBX,28
L63:
	MOV	DWORD [-608+EBP],8
L62:
	MOV	ESI,DWORD [8+EBP]
	MOV	EAX,EBX
	IMUL	EAX,DWORD [8+ESI]
	ADD	EAX,DWORD [-608+EBP]
	MOV	EDX,DWORD [4+ESI]
	MOV	BYTE [EAX+EDX*1],0
	INC	DWORD [-608+EBP]
	CMP	DWORD [-608+EBP],247
	JLE	L62
	INC	EBX
	CMP	EBX,155
	JLE	L63
	PUSH	156
	PUSH	248
	PUSH	28
	PUSH	8
	PUSH	ESI
	CALL	_sheet_refresh
	ADD	ESP,20
	MOV	DWORD [-596+EBP],28
	JMP	L52
L53:
	CLD
	LEA	ESI,DWORD [-556+EBP]
	MOV	EDI,LC4
	MOV	ECX,4
	REPE
	CMPSB
	JNE	L65
	MOV	DWORD [-608+EBP],0
	XOR	ESI,ESI
L78:
	MOV	AL,BYTE [1058304+ESI]
	TEST	AL,AL
	JE	L127
	CMP	AL,-27
	JE	L68
	TEST	BYTE [1058315+ESI],24
	JNE	L68
	PUSH	DWORD [1058332+ESI]
	PUSH	LC5
	LEA	EAX,DWORD [-588+EBP]
	PUSH	EAX
	XOR	EBX,EBX
	CALL	_sprintf
	ADD	ESP,12
L77:
	MOV	AL,BYTE [1058304+ESI+EBX*1]
	MOV	BYTE [-588+EBP+EBX*1],AL
	INC	EBX
	CMP	EBX,7
	JLE	L77
	MOV	AL,BYTE [1058312+ESI]
	MOV	BYTE [-579+EBP],AL
	MOV	AL,BYTE [1058313+ESI]
	MOV	BYTE [-578+EBP],AL
	MOV	AL,BYTE [1058314+ESI]
	PUSH	30
	MOV	BYTE [-577+EBP],AL
	LEA	EAX,DWORD [-588+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	CALL	_cons_newline
	ADD	ESP,36
	MOV	DWORD [-596+EBP],EAX
L68:
	INC	DWORD [-608+EBP]
	ADD	ESI,32
	CMP	DWORD [-608+EBP],223
	JLE	L78
L127:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
L152:
	CALL	_cons_newline
	MOV	DWORD [-596+EBP],EAX
	POP	EAX
	POP	EDX
	JMP	L52
L65:
	CLD
	LEA	ESI,DWORD [-556+EBP]
	MOV	EDI,LC6
	MOV	ECX,5
	REPE
	CMPSB
	JNE	L80
	XOR	EBX,EBX
L85:
	MOV	BYTE [-588+EBP+EBX*1],32
	INC	EBX
	CMP	EBX,10
	JLE	L85
	XOR	EBX,EBX
	MOV	DWORD [-608+EBP],5
	CMP	BYTE [-551+EBP],0
	JE	L87
L94:
	MOV	EAX,DWORD [-608+EBP]
	MOV	DL,BYTE [-556+EBP+EAX*1]
	CMP	DL,46
	JE	L155
L91:
	LEA	EAX,DWORD [-97+EDX]
	MOV	BYTE [-588+EBP+EBX*1],DL
	CMP	AL,25
	JA	L93
	LEA	EAX,DWORD [-32+EDX]
	MOV	BYTE [-588+EBP+EBX*1],AL
L93:
	INC	EBX
L88:
	INC	DWORD [-608+EBP]
	CMP	EBX,10
	JG	L87
	MOV	EDX,DWORD [-608+EBP]
	CMP	BYTE [-556+EBP+EDX*1],0
	JNE	L94
L87:
	MOV	DWORD [-608+EBP],0
	XOR	ECX,ECX
L108:
	CMP	BYTE [1058304+ECX],0
	JE	L96
	TEST	BYTE [1058315+ECX],24
	JNE	L106
	XOR	EBX,EBX
L107:
	MOVZX	EDX,BYTE [1058304+ECX+EBX*1]
	MOVSX	EAX,BYTE [-588+EBP+EBX*1]
	CMP	EDX,EAX
	JNE	L106
	INC	EBX
	CMP	EBX,10
	JLE	L107
L96:
	CMP	DWORD [-608+EBP],223
	JG	L109
	MOV	ESI,DWORD [-608+EBP]
	SAL	ESI,5
	CMP	BYTE [1058304+ESI],0
	JE	L109
	PUSH	DWORD [1058332+ESI]
	PUSH	3932160
	XOR	EBX,EBX
	MOV	EDI,8
	CALL	_memman_alloc_4k
	PUSH	1064448
	PUSH	DWORD [-616+EBP]
	PUSH	EAX
	MOV	DWORD [-612+EBP],EAX
	PUSH	DWORD [1058332+ESI]
	MOVZX	EAX,WORD [1058330+ESI]
	PUSH	EAX
	CALL	_file_loadfile
	ADD	ESP,28
	CMP	EBX,DWORD [1058332+ESI]
	JAE	L150
L126:
	MOV	ECX,DWORD [-612+EBP]
	MOV	AL,BYTE [EBX+ECX*1]
	CMP	AL,9
	JE	L115
	CMP	AL,10
	JE	L151
	CMP	AL,13
	JE	L112
	MOVSX	EAX,AL
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	ADD	ESP,24
	CMP	EDI,248
	JE	L151
L112:
	MOV	EAX,DWORD [-608+EBP]
	INC	EBX
	SAL	EAX,5
	CMP	EBX,DWORD [1058332+EAX]
	JB	L126
L150:
	SAL	DWORD [-608+EBP],5
	MOV	EBX,DWORD [-608+EBP]
	PUSH	DWORD [1058332+EBX]
	PUSH	DWORD [-612+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,12
	JMP	L127
L151:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	MOV	EDI,8
	CALL	_cons_newline
	POP	ECX
	MOV	DWORD [-596+EBP],EAX
	POP	ESI
	JMP	L112
L115:
	PUSH	32
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	ADD	ESP,24
	CMP	EDI,248
	JE	L156
L117:
	LEA	EAX,DWORD [-8+EDI]
	AND	EAX,31
	JNE	L115
	JMP	L112
L156:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	MOV	EDI,8
	CALL	_cons_newline
	MOV	DWORD [-596+EBP],EAX
	POP	EAX
	POP	EDX
	JMP	L117
L109:
	PUSH	15
	PUSH	LC7
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	CALL	_cons_newline
	ADD	ESP,36
	MOV	DWORD [-596+EBP],EAX
	JMP	L127
L106:
	INC	DWORD [-608+EBP]
	ADD	ECX,32
	CMP	DWORD [-608+EBP],223
	JLE	L108
	JMP	L109
L155:
	CMP	EBX,8
	JG	L91
	MOV	EBX,8
	JMP	L88
L80:
	CMP	BYTE [-556+EBP],0
	JE	L52
	PUSH	18
	PUSH	LC8
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	CALL	_cons_newline
	ADD	ESP,36
	PUSH	DWORD [8+EBP]
	MOV	DWORD [-596+EBP],EAX
	PUSH	EAX
	JMP	L152
L48:
	CMP	EDI,16
	JLE	L38
	PUSH	32
	PUSH	0
	PUSH	7
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	SUB	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfont8_sht
	JMP	L153
L45:
	MOV	EAX,DWORD [-596+EBP]
	ADD	EAX,15
	PUSH	EAX
	LEA	EAX,DWORD [7+EDI]
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [-596+EBP]
	PUSH	EDI
	PUSH	0
	PUSH	DWORD [8+EAX]
	PUSH	DWORD [4+EAX]
	CALL	_boxfill8
	ADD	ESP,28
	MOV	DWORD [-600+EBP],-1
	JMP	L38
L44:
	MOV	DWORD [-600+EBP],7
	JMP	L38
L154:
	PUSH	DWORD [-592+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	EAX
	JMP	L33
